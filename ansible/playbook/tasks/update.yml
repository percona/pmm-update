---
# This playbook contains tasks executed during PMM Server update.
- hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    pmm_packages:
      - percona-grafana
      - percona-victoriametrics
      - percona-qan-api2
      - percona-dashboards
      - percona-alertmanager
      - pmm-server
      - pmm-managed
      - pmm-update
      - dbaas-controller
      - dbaas-tools
      - pmm2-client
  pre_tasks:
    - name: detect /srv/pmm-distribution
      stat:
        path: /srv/pmm-distribution
      no_log: yes
      register: srv_pmm_distribution

    - name: detect containers
      set_fact:
        is_docker: '{{ lookup("file", "/srv/pmm-distribution") == "docker" }}'
      no_log: yes
      when: srv_pmm_distribution.stat.exists

    - name: force container
      set_fact:
        is_docker: True
      when: is_docker is undefined
  tasks:
    - name: Copy grafana provisioning files
      copy:
        src: "{{ item.source }}"
        dest: "{{ item.dest }}"
      loop:
        - { source: datasources.yml, dest: /usr/share/grafana/conf/provisioning/datasources/default.yml }
        - { source: plugins.yml, dest: /usr/share/grafana/conf/provisioning/plugins/default.yml }
        - { source: dashboards.yml, dest: /usr/share/grafana/conf/provisioning/dashboards/default.yml }

    - name: Set snapshot server URL in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: dashboards
        option: default_home_dashboard_path
        value: /usr/share/percona-dashboards/pmm-app/dist/dashboards/Home_Dashboard.json

    # Start the services
    - name: Supervisord start        | Start supervisord service for AMI/OVF
      when: ansible_virtualization_type != "docker"
      service:
        name: supervisord
        state: started
        enabled: yes

    - name: Check that supervisor socket exists
      stat:
        path: /var/run/supervisor/supervisor.sock
      register: is_supervisor_running

    - name: Supervisord start         | Start supervisord for docker
      when: ansible_virtualization_type == "docker" and not is_supervisor_running.stat.exists
      shell: supervisord -c /etc/supervisord.conf &

    # Replace forking type with simple. New config will be applied after next reboot.
    - name: Configure systemd
      when: not is_docker
      copy:
        src: supervisord.service
        dest: /usr/lib/systemd/system/supervisord.service
        mode: 0644

    - name: Remove old supervisord service confiuration
      when: not is_docker
      file:
        path: /etc/systemd/system/supervisord.service
        state: absent

    - name: Increase number of open files for jobs
      when: not is_docker
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: minfds
        value: "800000"

    # See https://github.com/Supervisor/supervisor/issues/1264 for explanation
    # why we do reread + stop/remove/add instead of using supervisorctl Ansible module.

    - name: Reread supervisord configuration
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines


    # see https://jira.percona.com/browse/PMM-8492 for details about a issue
    - name: Delete experimental repo file in 2.16 version
      file:
        path: "/etc/yum.repos.d/percona-original-experimental.repo"
        state: absent
      register: experimetal_repo_existed

    - name: Cleanup yum metadata
      command: yum clean metadata
      register: yum_clean_result
      changed_when: "'Cleaning repos' in yum_clean_result.stdout"
      when: experimetal_repo_existed.changed
      tags:
        - skip_ansible_lint # '503 Tasks that run when changed should likely be handlers'.
                            # The handler looks bad in this case

    # Split download and update to produce a bit more of progress output.
    - name: Download pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest
        download_only: yes

    - name: Update pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest

    # restart pmm-managed first as it may update supervisord configuration on start
    - name: Restart pmm-managed
      command: supervisorctl {{ item }} pmm-managed
      changed_when: True
      with_items: ["stop", "remove", "add"]

    # give pmm-managed time to update supervisord configuration,
    # and give update UI time to catch up after pmm-managed restart
    - name: Wait for pmm-managed
      pause: seconds=5

    - name: Update system packages
      yum:
        name: "*"
        state: latest
        security: yes
        exclude:
          - nginx

    - name: Install nginx
      include_role:
        name: nginx

    - name: Install clickhouse
      include_role:
        name: clickhouse

    # Fix things that should be fixed before restarts.

    - name: Stop systemd pmm-agent service, if running
      systemd:
        name: pmm-agent
        state: stopped
        enabled: no
      when: not is_docker

    - name: Remove old packages
      yum:
        state: absent
        name:
          - percona-qan-app # https://jira.percona.com/browse/PMM-6766
          - mariadb-libs # https://jira.percona.com/browse/PMM-5215
          - logrotate # https://jira.percona.com/browse/PMM-7627
          - screen

    - name: Check pg_stat_statements extension
      postgresql_ext:
        db: postgres
        name: pg_stat_statements

    # https://jira.percona.com/browse/PMM-5271
    - name: Check volume size
      when: not is_docker
      replace:
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        regexp: "set -o errexit"
        replace: ""

    - name: Enable external snapshots in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_enabled
        value: "true"

    - name: Set snapshot server URL in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_url
        value: https://snapshots-g710.percona.com

    - name: Set name for snapshot server in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_name
        value: Share with Percona

    - name: Set Grafana folder for plugins on /srv partition
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: paths
        option: plugins
        value: /srv/grafana/plugins

    - name: Set Grafana folder for plugins on /srv partition for all users
      lineinfile:
        path: /etc/bashrc
        line: 'export GF_PLUGIN_DIR=/srv/grafana/plugins'

    - name: Add ClickHouse datasource to the list of unsigned plugins in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: plugins
        option: allow_loading_unsigned_plugins
        value: vertamedia-clickhouse-datasource

    # TODO: Create /srv/alertmanager/data and /srv/victoriametrics/data in pmm-managed
    # to support Docker-way (swap image) updates.
    # https://jira.percona.com/browse/PMM-7024

    - name: Create working directory for Alertmanager
      file: path=/srv/alertmanager/data state=directory owner=pmm group=pmm

    - name: Create working directory for VictoriaMetrics
      file: path=/srv/victoriametrics/data state=directory owner=pmm group=pmm

    - name: Create empty configuration file for VictoriaMetrics
      file: path=/etc/victoriametrics-promscrape.yml state=touch owner=pmm group=pmm

    - name: Reread supervisord configuration again
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    - name: Restart services
      command: supervisorctl {{ item.1 }} {{ item.0 }}
      changed_when: True
      with_nested:
        - - postgresql
          - alertmanager
          - grafana
          - qan-api2
          - pmm-agent
        - ["stop", "remove", "add"]

    - name: Check if grafana plugins folder is new
      find:
        paths: '/srv/grafana/plugins'
        file_type: directory
      register: grafanaPluginFolderEmpty

    # copy grafana plugins to /srv partition
    - name: Copy plugins to /srv
      copy:
        src: /usr/share/percona-dashboards/panels/
        dest: /srv/grafana/plugins/
        remote_src: yes
        directory_mode: yes
        mode: '0775'
      when: grafanaPluginFolderEmpty.matched == 0

    - name: Delete old folder for grafana plugins
      file:
        state: absent
        path: "{{ item }}"
      loop:
        - /usr/share/percona-dashboards/panels
        - /var/lib/grafana/plugins/

    - name: Start Grafana dashboards update
      command: supervisorctl start dashboard-upgrade
      changed_when: True

    - name: Update/restart other services
      command: supervisorctl update
      register: update_result
      changed_when: "'updated' in update_result.stdout"

    - name: Check other services
      debug: var=update_result.stdout_lines

    # SIGUSR2 is sent to supervisord by pmm-managed right before the update to for logging to work correctly.
    # We use that fact to show what was restarted during the update.
    - name: Get supervisord log
      shell: supervisorctl maintail -100000 | tac | awk '!flag; /received SIGUSR2/{flag = 1};' | tac
      register: maintail_result
      changed_when: False

    - name: Check supervisord log
      debug: var=maintail_result.stdout_lines


    - name: Cleanup yum cache
      command: yum clean all
      register: yum_clean_result
      changed_when: "'Cleaning repos' in yum_clean_result.stdout"
