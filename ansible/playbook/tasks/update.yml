---
# This playbook contains tasks executed during PMM Server update.

- hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    pmm_packages:
      - percona-grafana
      - percona-victoriametrics
      - percona-qan-api2
      - percona-dashboards
      - percona-alertmanager
      - pmm-server
      - pmm-managed
      - pmm-update
      - percona-clickhouse-client
      - percona-clickhouse-server
      - dbaas-controller
      - dbaas-tools
      - pmm2-client
  pre_tasks:
    - name: detect /srv/pmm-distribution
      stat:
        path: /srv/pmm-distribution
      no_log: yes
      register: srv_pmm_distribution

    - name: detect containers
      set_fact:
        is_docker: '{{ lookup("file", "/srv/pmm-distribution") == "docker" }}'
      no_log: yes
      when: srv_pmm_distribution.stat.exists

    - name: set dbaas toggle
      set_fact:
        is_dbaas_on: "{{ lookup('env', 'PERCONA_TEST_DBAAS') == '1' }}"
      no_log: yes

    - name: force container
      set_fact:
        is_docker: True
      when: is_docker is undefined

  tasks:
    # Replace forking type with simple. New config will be applied after next reboot.
    - name: Configure systemd
      when: not is_docker
      copy:
        src: supervisord.service
        dest: /usr/lib/systemd/system/supervisord.service
        mode: 0644

    - name: Remove old supervisord service confiuration
      when: not is_docker
      file:
        path: /etc/systemd/system/supervisord.service
        state: absent

    - name: Increase number of open files for jobs
      when: not is_docker
      ini_file:
        dest: /etc/supervisord.conf
        section: supervisord
        option: minfds
        value: "800000"

    # See https://github.com/Supervisor/supervisor/issues/1264 for explanation
    # why we do reread + stop/remove/add instead of using supervisorctl Ansible module.

    - name: Reread supervisord configuration
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines


    # see https://jira.percona.com/browse/PMM-8492 for details about a issue
    - name: Delete experimental repo file in 2.16 version
      file:
        path: "/etc/yum.repos.d/percona-original-experimental.repo"
        state: absent
      register: experimetal_repo_existed

    - name: Cleanup yum metadata
      command: yum clean metadata
      register: yum_clean_result
      changed_when: "'Cleaning repos' in yum_clean_result.stdout"
      when: experimetal_repo_existed.changed
      tags:
        - skip_ansible_lint # '503 Tasks that run when changed should likely be handlers'.
                            # The handler looks bad in this case

    # Split download and update to produce a bit more of progress output.
    - name: Download pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest
        download_only: yes

    - name: Update pmm2 packages
      yum:
        name: "{{ pmm_packages }}"
        state: latest

    # TODO START: It seems we'll be able to remove it after 2.21 release (We'll need test it). see https://jira.percona.com/browse/PMM-8492
    - name: Reinstall pmm2-client after removing experimental repo
      when: experimetal_repo_existed.changed
      block:
      - name: Remove pmm2-client
        yum:
          name: pmm2-client
          state: absent

      - name: install pmm2-client again
        yum:
          name: pmm2-client
          state: latest
    # TODO END

    - name: Update system packages
      yum:
        name: "*"
        state: latest
        security: yes
        exclude:
          - nginx

    - name: Install nginx
      include_role:
        name: nginx

    # Fix things that should be fixed before restarts.

    - name: Stop systemd pmm-agent service, if running
      systemd:
        name: pmm-agent
        state: stopped
        enabled: no
      when: not is_docker

    - name: Remove old packages
      yum:
        state: absent
        name:
          - percona-qan-app # https://jira.percona.com/browse/PMM-6766
          - mariadb-libs # https://jira.percona.com/browse/PMM-5215
          - logrotate # https://jira.percona.com/browse/PMM-7627
          - screen

    - name: Check pg_stat_statements extension
      postgresql_ext:
        db: postgres
        name: pg_stat_statements

    # https://jira.percona.com/browse/PMM-5271
    - name: Check volume size
      when: not is_docker
      replace:
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        regexp: "set -o errexit"
        replace: ""

    - name: Enable external snapshots in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_enabled
        value: "true"

    - name: Set snapshot server URL in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_url
        value: https://snapshots-g710.percona.com

    - name: Set name for snapshot server in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: snapshots
        option: external_snapshot_name
        value: Share with Percona

    - name: Add ClickHouse datasource to the list of unsigned plugins in Grafana
      ini_file:
        dest: /etc/grafana/grafana.ini
        section: plugins
        option: allow_loading_unsigned_plugins
        value: vertamedia-clickhouse-datasource

    - name: Clickhouse logger         | Configure clickhouse logger
      replace:
        path: /etc/clickhouse-server/config.xml
        regexp: '<logger>[\s\S]*</logger>'
        replace: |-
          <logger>
                  <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
                  <level>trace</level>
                  <console>1</console>
              </logger>

    # TODO: Create /srv/alertmanager/data and /srv/victoriametrics/data in pmm-managed
    # to support Docker-way (swap image) updates.
    # https://jira.percona.com/browse/PMM-7024

    - name: Create working directory for Alertmanager
      file: path=/srv/alertmanager/data state=directory owner=pmm group=pmm

    - name: Create working directory for VictoriaMetrics
      file: path=/srv/victoriametrics/data state=directory owner=pmm group=pmm

    - name: Create empty configuration file for VictoriaMetrics
      file: path=/etc/victoriametrics-promscrape.yml state=touch owner=pmm group=pmm

    # restart pmm-managed first as it may update supervisord configuration on start
    - name: Restart pmm-managed
      command: supervisorctl {{ item }} pmm-managed
      changed_when: True
      with_items: ["stop", "remove", "add"]

    # give pmm-managed time to update supervisord configuration,
    # and give update UI time to catch up after pmm-managed restart
    - name: Wait for pmm-managed
      pause: seconds=5

    - name: Reread supervisord configuration again
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    - name: Restart services
      command: supervisorctl {{ item.1 }} {{ item.0 }}
      changed_when: True
      with_nested:
        - - postgresql
          - alertmanager
          - clickhouse
          - grafana
          - qan-api2
          - pmm-agent
        - ["stop", "remove", "add"]

    - name: Restart dbaas-controller
      command: supervisorctl {{ item }} dbaas-controller
      changed_when: True
      when: is_dbaas_on
      loop:
        - "stop"
        - "remove"
        - "add"

    # set folder names of panels to format that's supported by grafana-cli
    - name: Rename Grafana community panels
      command: /usr/share/percona-dashboards/fix-panels.py
      changed_when: False

    - name: Start Grafana dashboards update
      command: supervisorctl start dashboard-upgrade
      changed_when: True

    - name: Update/restart other services
      command: supervisorctl update
      register: update_result
      changed_when: "'updated' in update_result.stdout"

    - name: Check other services
      debug: var=update_result.stdout_lines

    # SIGUSR2 is sent to supervisord by pmm-managed right before the update to for logging to work correctly.
    # We use that fact to show what was restarted during the update.
    - name: Get supervisord log
      shell: supervisorctl maintail -100000 | tac | awk '!flag; /received SIGUSR2/{flag = 1};' | tac
      register: maintail_result
      changed_when: False

    - name: Check supervisord log
      debug: var=maintail_result.stdout_lines


    - name: Cleanup yum cache
      command: yum clean all
      register: yum_clean_result
      changed_when: "'Cleaning repos' in yum_clean_result.stdout"
