---
# This roles contains tasks executed during initialization PMM Server
- name: Get current version
  slurp:
    src: /srv/grafana/PERCONA_DASHBOARDS_VERSION
  register: current_version_file
  ignore_errors: True

- name: Get image version
  slurp:
    src: /usr/share/percona-dashboards/VERSION
  register: image_version_file

- name: Set current version if VERSION fail doen't exist
  set_fact:
      pmm_current_version: "0.0"
  when: current_version_file['failed'] == true

- name: Setting current and image version
  set_fact:
    pmm_current_version: "{{ current_version_file['content'] | b64decode | trim }}"
  when: current_version_file['failed'] != true

- name: Setting current and image version
  set_fact:
    pmm_image_version: "{{ image_version_file['content'] | b64decode | trim }}"

- name: Print current version
  debug:
    msg: "Current version: {{ pmm_current_version }} Image Version: {{ pmm_image_version }}"

- name: Checking if we need an update or not
  meta: end_play
  when: pmm_current_version is version(pmm_image_version, '>=')

- name: Check that old plugin dir exists
  stat:
    path: /var/lib/grafana/plugins/
  register: old_plugin_dir_exist


- name: Remove old dashboards from SQLite
  block:
  - name: Find custom plugin in old plugin dir
    find:
      paths: /var/lib/grafana/plugins
      recurse: no
      file_type: directory
      excludes:
        - '*-???????'
        - pmm-app
    register: custom_plugins

  - name: Synchronization plugins (old version before 2.22.0)
    synchronize:
      src: "{{ item['path'] }}"
      dest: "/srv/grafana/plugins/"
    loop: "{{ custom_plugins['files'] }}"

  - name: Find custom plugin in old plugin dir
    find:
      paths: /var/lib/grafana/plugins
      recurse: no
      file_type: directory
      excludes:
        - '*-???????'
        - pmm-app

  when: old_plugin_dir_exist.stat.exists

- name: Get plugin list
  register: plugin_list
  find:
    paths: /usr/share/percona-dashboards/panels/
    depth: 2
    file_type: directory

- name: Delete existing dist folder
  file:
    path: "/srv/grafana/plugins/{{ item['path'].split('/')[-1] }}"
    state: absent
  loop: "{{ plugin_list['files'] }}"

- name: Synchronization plugin
  synchronize:
    src: /usr/share/percona-dashboards/panels/
    dest: /srv/grafana/plugins/
  delegate_to: "{{ inventory_hostname }}"

- name: Move pmm-app/dist to pmm-app/
  copy:
    src: /srv/grafana/plugins/pmm-app/dist/
    dest: /srv/grafana/plugins/pmm-app/
    remote_src: yes

- name: Check that the SQLite grafana database exists
  stat:
    path: /srv/grafana/grafana.db
  register: sqlite_grafana

- name: Add unsigned plugins to Grafana
  ini_file:
    dest: /etc/grafana/grafana.ini
    section: plugins
    option: allow_loading_unsigned_plugins
    value: vertamedia-clickhouse-datasource,pmm-app,pmm-check-panel-home,pmm-update,pmm-qan-app-panel,pmm-pt-summary-panel,pmm-pt-summary-datasource

- name: Remove old dashboards from SQLite
  block:
  - name: Restart grafana before delete data
    supervisorctl:
      name: grafana
      state: stopped
  - name: Remove old DBaaS dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'DBaaS' AND slug = 'dbaas';"
    changed_when: True

  - name: Remove old PMM Inventory (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Inventory' AND slug = 'pmm-inventory';"
    changed_when: True

  - name: Remove old PMM Add Instance dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Add Instance' AND slug = 'pmm-add-instance';"
    changed_when: True

  - name: Remove old PMM Database Checks dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Database Checks' AND slug = 'pmm-database-checks';"
    changed_when: True

  - name: Remove old PMM Settings dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Settings' AND slug = 'pmm-settings';"
    changed_when: True
  when: sqlite_grafana.stat.exists

- name: Restart grafana with new plugins
  supervisorctl:
    name: grafana
    state: restarted
  ignore_errors: True

- name: Display grafana.log content
  command: cat /srv/logs/grafana.log
  register: command_output

- name: Print to console
  debug:
    msg: "{{command_output.stdout}}"

- name: Copy file with image version
  copy:
    src: /usr/share/percona-dashboards/VERSION
    dest: /srv/grafana/PERCONA_DASHBOARDS_VERSION
    remote_src: yes
