---
- name: Create Grafana backup dir
  file:
    path: "{{ grafana_backup_dir }}"
    state: directory
    owner: grafana
    group: grafana
    mode: '0700'

- name: Stop grafana before upgrade
  supervisorctl:
    name: 'grafana'
    state: stopped

- name: Create grafana database
  postgresql_db:
    name: grafana
    state: present

- name: Create grafana user
  postgresql_user:
    db: grafana
    name: grafana
    password: grafana
    priv: 'ALL'
    expires: infinity
    state: present
  when: not ansible_check_mode


- name: Check if migrator exist (docker-way upgrade)
  stat:
    path: /usr/bin/grafana-migrator
  register: migrator

- name: Download sqlite->postgres migrator
  get_url:
    url: "https://github.com/wbh1/grafana-sqlite-to-postgres/releases/download/v2.0.1/grafana-migrate_linux_amd64-v2.0.1"
    dest: /usr/bin/grafana-migrator
  when: not migrator.stat.exists

- name: Make migrate executable
  file:
    dest: /usr/bin/grafana-migrator
    mode: +x
  when: not ansible_check_mode

- name: Create actual grafana config
  include_role:
    name: grafana

- name: Start grafana again
  supervisorctl:
    name: grafana
    state: started

- name: wait grafana database initiazation
  pause:
    seconds: 10

- name: Stop grafana before upgrade
  supervisorctl:
    name: 'grafana'
    state: stopped

- name: Run grafana migrator
  command: grafana-migrator /srv/grafana/grafana.db "postgres://grafana:grafana@localhost:5432/grafana?sslmode=disable"
  register: migrator_output
  changed_when: "'All done' in migrator_output.stdout"

- name: start grafana again
  supervisorctl:
    name: grafana
    state: started

- name: create backup for SQLite Grafana database
  copy:
    src: /srv/grafana/grafana.db
    dest: "{{ grafana_backup_dir }}/grafana.db"
    owner: grafana
    group: grafana
    mode: '0700'

- name: Remove SQLite Grafana database
  file:
    path: /srv/grafana/grafana.db
    state: absent